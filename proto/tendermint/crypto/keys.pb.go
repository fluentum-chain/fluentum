// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/crypto/keys.proto

package crypto

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublicKey defines the keys available for use with Tendermint Validators
type PublicKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*PublicKey_Ed25519
	//	*PublicKey_Secp256K1
	Sum           isPublicKey_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_tendermint_crypto_keys_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_crypto_keys_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_tendermint_crypto_keys_proto_rawDescGZIP(), []int{0}
}

func (x *PublicKey) GetSum() isPublicKey_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *PublicKey) GetEd25519() []byte {
	if x != nil {
		if x, ok := x.Sum.(*PublicKey_Ed25519); ok {
			return x.Ed25519
		}
	}
	return nil
}

func (x *PublicKey) GetSecp256K1() []byte {
	if x != nil {
		if x, ok := x.Sum.(*PublicKey_Secp256K1); ok {
			return x.Secp256K1
		}
	}
	return nil
}

type isPublicKey_Sum interface {
	isPublicKey_Sum()
}

type PublicKey_Ed25519 struct {
	Ed25519 []byte `protobuf:"bytes,1,opt,name=ed25519,proto3,oneof"`
}

type PublicKey_Secp256K1 struct {
	Secp256K1 []byte `protobuf:"bytes,2,opt,name=secp256k1,proto3,oneof"`
}

func (*PublicKey_Ed25519) isPublicKey_Sum() {}

func (*PublicKey_Secp256K1) isPublicKey_Sum() {}

var File_tendermint_crypto_keys_proto protoreflect.FileDescriptor

const file_tendermint_crypto_keys_proto_rawDesc = "" +
	"\n" +
	"\x1ctendermint/crypto/keys.proto\x12\x11tendermint.crypto\x1a\x14gogoproto/gogo.proto\"X\n" +
	"\tPublicKey\x12\x1a\n" +
	"\aed25519\x18\x01 \x01(\fH\x00R\aed25519\x12\x1e\n" +
	"\tsecp256k1\x18\x02 \x01(\fH\x00R\tsecp256k1:\b\xe8\xa0\x1f\x01\xe8\xa1\x1f\x01B\x05\n" +
	"\x03sumB\xc3\x01\n" +
	"\x15com.tendermint.cryptoB\tKeysProtoP\x01Z:github.com/fluentum-chain/fluentum/proto/tendermint/crypto\xa2\x02\x03TCX\xaa\x02\x11Tendermint.Crypto\xca\x02\x11Tendermint\\Crypto\xe2\x02\x1dTendermint\\Crypto\\GPBMetadata\xea\x02\x12Tendermint::Cryptob\x06proto3"

var (
	file_tendermint_crypto_keys_proto_rawDescOnce sync.Once
	file_tendermint_crypto_keys_proto_rawDescData []byte
)

func file_tendermint_crypto_keys_proto_rawDescGZIP() []byte {
	file_tendermint_crypto_keys_proto_rawDescOnce.Do(func() {
		file_tendermint_crypto_keys_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_crypto_keys_proto_rawDesc), len(file_tendermint_crypto_keys_proto_rawDesc)))
	})
	return file_tendermint_crypto_keys_proto_rawDescData
}

var file_tendermint_crypto_keys_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tendermint_crypto_keys_proto_goTypes = []any{
	(*PublicKey)(nil), // 0: tendermint.crypto.PublicKey
}
var file_tendermint_crypto_keys_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tendermint_crypto_keys_proto_init() }
func file_tendermint_crypto_keys_proto_init() {
	if File_tendermint_crypto_keys_proto != nil {
		return
	}
	file_tendermint_crypto_keys_proto_msgTypes[0].OneofWrappers = []any{
		(*PublicKey_Ed25519)(nil),
		(*PublicKey_Secp256K1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_crypto_keys_proto_rawDesc), len(file_tendermint_crypto_keys_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_crypto_keys_proto_goTypes,
		DependencyIndexes: file_tendermint_crypto_keys_proto_depIdxs,
		MessageInfos:      file_tendermint_crypto_keys_proto_msgTypes,
	}.Build()
	File_tendermint_crypto_keys_proto = out.File
	file_tendermint_crypto_keys_proto_goTypes = nil
	file_tendermint_crypto_keys_proto_depIdxs = nil
}
