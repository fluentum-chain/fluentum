// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/state/types.proto

package state

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	_ "github.com/fluentum-chain/fluentum/proto/tendermint/abci"
	types "github.com/fluentum-chain/fluentum/proto/tendermint/types"
	version "github.com/fluentum-chain/fluentum/proto/tendermint/version"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ABCIResponses retains the responses
// of the various ABCI calls during block processing.
// It is persisted to disk for each height before calling Commit.
type ABCIResponses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ABCIResponses) Reset() {
	*x = ABCIResponses{}
	mi := &file_tendermint_state_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABCIResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIResponses) ProtoMessage() {}

func (x *ABCIResponses) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIResponses.ProtoReflect.Descriptor instead.
func (*ABCIResponses) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{0}
}

// ValidatorsInfo represents the latest validator set, or the last height it changed
type ValidatorsInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ValidatorSet      *types.ValidatorSet    `protobuf:"bytes,1,opt,name=validator_set,json=validatorSet,proto3" json:"validator_set,omitempty"`
	LastHeightChanged int64                  `protobuf:"varint,2,opt,name=last_height_changed,json=lastHeightChanged,proto3" json:"last_height_changed,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ValidatorsInfo) Reset() {
	*x = ValidatorsInfo{}
	mi := &file_tendermint_state_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorsInfo) ProtoMessage() {}

func (x *ValidatorsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorsInfo.ProtoReflect.Descriptor instead.
func (*ValidatorsInfo) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{1}
}

func (x *ValidatorsInfo) GetValidatorSet() *types.ValidatorSet {
	if x != nil {
		return x.ValidatorSet
	}
	return nil
}

func (x *ValidatorsInfo) GetLastHeightChanged() int64 {
	if x != nil {
		return x.LastHeightChanged
	}
	return 0
}

// ConsensusParamsInfo represents the latest consensus params, or the last height it changed
type ConsensusParamsInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConsensusParams   *types.ConsensusParams `protobuf:"bytes,1,opt,name=consensus_params,json=consensusParams,proto3" json:"consensus_params,omitempty"`
	LastHeightChanged int64                  `protobuf:"varint,2,opt,name=last_height_changed,json=lastHeightChanged,proto3" json:"last_height_changed,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConsensusParamsInfo) Reset() {
	*x = ConsensusParamsInfo{}
	mi := &file_tendermint_state_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusParamsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusParamsInfo) ProtoMessage() {}

func (x *ConsensusParamsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusParamsInfo.ProtoReflect.Descriptor instead.
func (*ConsensusParamsInfo) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{2}
}

func (x *ConsensusParamsInfo) GetConsensusParams() *types.ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *ConsensusParamsInfo) GetLastHeightChanged() int64 {
	if x != nil {
		return x.LastHeightChanged
	}
	return 0
}

type ABCIResponsesInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AbciResponses *ABCIResponses         `protobuf:"bytes,1,opt,name=abci_responses,json=abciResponses,proto3" json:"abci_responses,omitempty"`
	Height        int64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ABCIResponsesInfo) Reset() {
	*x = ABCIResponsesInfo{}
	mi := &file_tendermint_state_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABCIResponsesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIResponsesInfo) ProtoMessage() {}

func (x *ABCIResponsesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIResponsesInfo.ProtoReflect.Descriptor instead.
func (*ABCIResponsesInfo) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{3}
}

func (x *ABCIResponsesInfo) GetAbciResponses() *ABCIResponses {
	if x != nil {
		return x.AbciResponses
	}
	return nil
}

func (x *ABCIResponsesInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consensus     *version.Consensus     `protobuf:"bytes,1,opt,name=consensus,proto3" json:"consensus,omitempty"`
	Software      string                 `protobuf:"bytes,2,opt,name=software,proto3" json:"software,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_tendermint_state_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{4}
}

func (x *Version) GetConsensus() *version.Consensus {
	if x != nil {
		return x.Consensus
	}
	return nil
}

func (x *Version) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

type State struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Version *Version               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// immutable
	ChainId       string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	InitialHeight int64  `protobuf:"varint,14,opt,name=initial_height,json=initialHeight,proto3" json:"initial_height,omitempty"`
	// LastBlockHeight=0 at genesis (ie. block(H=0) does not exist)
	LastBlockHeight int64                  `protobuf:"varint,3,opt,name=last_block_height,json=lastBlockHeight,proto3" json:"last_block_height,omitempty"`
	LastBlockId     *types.BlockID         `protobuf:"bytes,4,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	LastBlockTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_block_time,json=lastBlockTime,proto3" json:"last_block_time,omitempty"`
	// LastValidators is used to validate block.LastCommit.
	// Validators are persisted to the database separately every time they change,
	// so we can query for historical validator sets.
	// Note that if s.LastBlockHeight causes a valset change,
	// we set s.LastHeightValidatorsChanged = s.LastBlockHeight + 1 + 1
	// Extra +1 due to nextValSet delay.
	NextValidators              *types.ValidatorSet `protobuf:"bytes,6,opt,name=next_validators,json=nextValidators,proto3" json:"next_validators,omitempty"`
	Validators                  *types.ValidatorSet `protobuf:"bytes,7,opt,name=validators,proto3" json:"validators,omitempty"`
	LastValidators              *types.ValidatorSet `protobuf:"bytes,8,opt,name=last_validators,json=lastValidators,proto3" json:"last_validators,omitempty"`
	LastHeightValidatorsChanged int64               `protobuf:"varint,9,opt,name=last_height_validators_changed,json=lastHeightValidatorsChanged,proto3" json:"last_height_validators_changed,omitempty"`
	// Consensus parameters used for validating blocks.
	// Changes returned by EndBlock and updated after Commit.
	ConsensusParams                  *types.ConsensusParams `protobuf:"bytes,10,opt,name=consensus_params,json=consensusParams,proto3" json:"consensus_params,omitempty"`
	LastHeightConsensusParamsChanged int64                  `protobuf:"varint,11,opt,name=last_height_consensus_params_changed,json=lastHeightConsensusParamsChanged,proto3" json:"last_height_consensus_params_changed,omitempty"`
	// Merkle root of the results from executing prev block
	LastResultsHash []byte `protobuf:"bytes,12,opt,name=last_results_hash,json=lastResultsHash,proto3" json:"last_results_hash,omitempty"`
	// the latest AppHash we've received from calling abci.Commit()
	AppHash       []byte `protobuf:"bytes,13,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_tendermint_state_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_state_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_tendermint_state_types_proto_rawDescGZIP(), []int{5}
}

func (x *State) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *State) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *State) GetInitialHeight() int64 {
	if x != nil {
		return x.InitialHeight
	}
	return 0
}

func (x *State) GetLastBlockHeight() int64 {
	if x != nil {
		return x.LastBlockHeight
	}
	return 0
}

func (x *State) GetLastBlockId() *types.BlockID {
	if x != nil {
		return x.LastBlockId
	}
	return nil
}

func (x *State) GetLastBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastBlockTime
	}
	return nil
}

func (x *State) GetNextValidators() *types.ValidatorSet {
	if x != nil {
		return x.NextValidators
	}
	return nil
}

func (x *State) GetValidators() *types.ValidatorSet {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *State) GetLastValidators() *types.ValidatorSet {
	if x != nil {
		return x.LastValidators
	}
	return nil
}

func (x *State) GetLastHeightValidatorsChanged() int64 {
	if x != nil {
		return x.LastHeightValidatorsChanged
	}
	return 0
}

func (x *State) GetConsensusParams() *types.ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *State) GetLastHeightConsensusParamsChanged() int64 {
	if x != nil {
		return x.LastHeightConsensusParamsChanged
	}
	return 0
}

func (x *State) GetLastResultsHash() []byte {
	if x != nil {
		return x.LastResultsHash
	}
	return nil
}

func (x *State) GetAppHash() []byte {
	if x != nil {
		return x.AppHash
	}
	return nil
}

var File_tendermint_state_types_proto protoreflect.FileDescriptor

const file_tendermint_state_types_proto_rawDesc = "" +
	"\n" +
	"\x1ctendermint/state/types.proto\x12\x10tendermint.state\x1a\x14gogoproto/gogo.proto\x1a\x1btendermint/abci/types.proto\x1a\x1ctendermint/types/types.proto\x1a tendermint/types/validator.proto\x1a\x1dtendermint/types/params.proto\x1a\x1etendermint/version/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0f\n" +
	"\rABCIResponses\"\x85\x01\n" +
	"\x0eValidatorsInfo\x12C\n" +
	"\rvalidator_set\x18\x01 \x01(\v2\x1e.tendermint.types.ValidatorSetR\fvalidatorSet\x12.\n" +
	"\x13last_height_changed\x18\x02 \x01(\x03R\x11lastHeightChanged\"\x99\x01\n" +
	"\x13ConsensusParamsInfo\x12R\n" +
	"\x10consensus_params\x18\x01 \x01(\v2!.tendermint.types.ConsensusParamsB\x04\xc8\xde\x1f\x00R\x0fconsensusParams\x12.\n" +
	"\x13last_height_changed\x18\x02 \x01(\x03R\x11lastHeightChanged\"s\n" +
	"\x11ABCIResponsesInfo\x12F\n" +
	"\x0eabci_responses\x18\x01 \x01(\v2\x1f.tendermint.state.ABCIResponsesR\rabciResponses\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x03R\x06height\"h\n" +
	"\aVersion\x12A\n" +
	"\tconsensus\x18\x01 \x01(\v2\x1d.tendermint.version.ConsensusB\x04\xc8\xde\x1f\x00R\tconsensus\x12\x1a\n" +
	"\bsoftware\x18\x02 \x01(\tR\bsoftware\"\xe1\x06\n" +
	"\x05State\x129\n" +
	"\aversion\x18\x01 \x01(\v2\x19.tendermint.state.VersionB\x04\xc8\xde\x1f\x00R\aversion\x12&\n" +
	"\bchain_id\x18\x02 \x01(\tB\v\xe2\xde\x1f\aChainIDR\achainId\x12%\n" +
	"\x0einitial_height\x18\x0e \x01(\x03R\rinitialHeight\x12*\n" +
	"\x11last_block_height\x18\x03 \x01(\x03R\x0flastBlockHeight\x12R\n" +
	"\rlast_block_id\x18\x04 \x01(\v2\x19.tendermint.types.BlockIDB\x13\xc8\xde\x1f\x00\xe2\xde\x1f\vLastBlockIDR\vlastBlockId\x12L\n" +
	"\x0flast_block_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\rlastBlockTime\x12G\n" +
	"\x0fnext_validators\x18\x06 \x01(\v2\x1e.tendermint.types.ValidatorSetR\x0enextValidators\x12>\n" +
	"\n" +
	"validators\x18\a \x01(\v2\x1e.tendermint.types.ValidatorSetR\n" +
	"validators\x12G\n" +
	"\x0flast_validators\x18\b \x01(\v2\x1e.tendermint.types.ValidatorSetR\x0elastValidators\x12C\n" +
	"\x1elast_height_validators_changed\x18\t \x01(\x03R\x1blastHeightValidatorsChanged\x12R\n" +
	"\x10consensus_params\x18\n" +
	" \x01(\v2!.tendermint.types.ConsensusParamsB\x04\xc8\xde\x1f\x00R\x0fconsensusParams\x12N\n" +
	"$last_height_consensus_params_changed\x18\v \x01(\x03R lastHeightConsensusParamsChanged\x12*\n" +
	"\x11last_results_hash\x18\f \x01(\fR\x0flastResultsHash\x12\x19\n" +
	"\bapp_hash\x18\r \x01(\fR\aappHashB\xbe\x01\n" +
	"\x14com.tendermint.stateB\n" +
	"TypesProtoP\x01Z9github.com/fluentum-chain/fluentum/proto/tendermint/state\xa2\x02\x03TSX\xaa\x02\x10Tendermint.State\xca\x02\x10Tendermint\\State\xe2\x02\x1cTendermint\\State\\GPBMetadata\xea\x02\x11Tendermint::Stateb\x06proto3"

var (
	file_tendermint_state_types_proto_rawDescOnce sync.Once
	file_tendermint_state_types_proto_rawDescData []byte
)

func file_tendermint_state_types_proto_rawDescGZIP() []byte {
	file_tendermint_state_types_proto_rawDescOnce.Do(func() {
		file_tendermint_state_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_state_types_proto_rawDesc), len(file_tendermint_state_types_proto_rawDesc)))
	})
	return file_tendermint_state_types_proto_rawDescData
}

var file_tendermint_state_types_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tendermint_state_types_proto_goTypes = []any{
	(*ABCIResponses)(nil),         // 0: tendermint.state.ABCIResponses
	(*ValidatorsInfo)(nil),        // 1: tendermint.state.ValidatorsInfo
	(*ConsensusParamsInfo)(nil),   // 2: tendermint.state.ConsensusParamsInfo
	(*ABCIResponsesInfo)(nil),     // 3: tendermint.state.ABCIResponsesInfo
	(*Version)(nil),               // 4: tendermint.state.Version
	(*State)(nil),                 // 5: tendermint.state.State
	(*types.ValidatorSet)(nil),    // 6: tendermint.types.ValidatorSet
	(*types.ConsensusParams)(nil), // 7: tendermint.types.ConsensusParams
	(*version.Consensus)(nil),     // 8: tendermint.version.Consensus
	(*types.BlockID)(nil),         // 9: tendermint.types.BlockID
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_tendermint_state_types_proto_depIdxs = []int32{
	6,  // 0: tendermint.state.ValidatorsInfo.validator_set:type_name -> tendermint.types.ValidatorSet
	7,  // 1: tendermint.state.ConsensusParamsInfo.consensus_params:type_name -> tendermint.types.ConsensusParams
	0,  // 2: tendermint.state.ABCIResponsesInfo.abci_responses:type_name -> tendermint.state.ABCIResponses
	8,  // 3: tendermint.state.Version.consensus:type_name -> tendermint.version.Consensus
	4,  // 4: tendermint.state.State.version:type_name -> tendermint.state.Version
	9,  // 5: tendermint.state.State.last_block_id:type_name -> tendermint.types.BlockID
	10, // 6: tendermint.state.State.last_block_time:type_name -> google.protobuf.Timestamp
	6,  // 7: tendermint.state.State.next_validators:type_name -> tendermint.types.ValidatorSet
	6,  // 8: tendermint.state.State.validators:type_name -> tendermint.types.ValidatorSet
	6,  // 9: tendermint.state.State.last_validators:type_name -> tendermint.types.ValidatorSet
	7,  // 10: tendermint.state.State.consensus_params:type_name -> tendermint.types.ConsensusParams
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tendermint_state_types_proto_init() }
func file_tendermint_state_types_proto_init() {
	if File_tendermint_state_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_state_types_proto_rawDesc), len(file_tendermint_state_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_state_types_proto_goTypes,
		DependencyIndexes: file_tendermint_state_types_proto_depIdxs,
		MessageInfos:      file_tendermint_state_types_proto_msgTypes,
	}.Build()
	File_tendermint_state_types_proto = out.File
	file_tendermint_state_types_proto_goTypes = nil
	file_tendermint_state_types_proto_depIdxs = nil
}
