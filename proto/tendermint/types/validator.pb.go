// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/types/validator.proto

package types

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	crypto "github.com/fluentum-chain/fluentum/proto/tendermint/crypto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidatorSet struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Validators       []*Validator           `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
	Proposer         *Validator             `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	TotalVotingPower int64                  `protobuf:"varint,3,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidatorSet) Reset() {
	*x = ValidatorSet{}
	mi := &file_tendermint_types_validator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSet) ProtoMessage() {}

func (x *ValidatorSet) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_validator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorSet.ProtoReflect.Descriptor instead.
func (*ValidatorSet) Descriptor() ([]byte, []int) {
	return file_tendermint_types_validator_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorSet) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *ValidatorSet) GetProposer() *Validator {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ValidatorSet) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

type Validator struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Address          []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey           *crypto.PublicKey      `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	VotingPower      int64                  `protobuf:"varint,3,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
	ProposerPriority int64                  `protobuf:"varint,4,opt,name=proposer_priority,json=proposerPriority,proto3" json:"proposer_priority,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Validator) Reset() {
	*x = Validator{}
	mi := &file_tendermint_types_validator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_validator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_tendermint_types_validator_proto_rawDescGZIP(), []int{1}
}

func (x *Validator) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Validator) GetPubKey() *crypto.PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *Validator) GetVotingPower() int64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

func (x *Validator) GetProposerPriority() int64 {
	if x != nil {
		return x.ProposerPriority
	}
	return 0
}

type SimpleValidator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PubKey        *crypto.PublicKey      `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	VotingPower   int64                  `protobuf:"varint,2,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleValidator) Reset() {
	*x = SimpleValidator{}
	mi := &file_tendermint_types_validator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleValidator) ProtoMessage() {}

func (x *SimpleValidator) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_validator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleValidator.ProtoReflect.Descriptor instead.
func (*SimpleValidator) Descriptor() ([]byte, []int) {
	return file_tendermint_types_validator_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleValidator) GetPubKey() *crypto.PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *SimpleValidator) GetVotingPower() int64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

var File_tendermint_types_validator_proto protoreflect.FileDescriptor

const file_tendermint_types_validator_proto_rawDesc = "" +
	"\n" +
	" tendermint/types/validator.proto\x12\x10tendermint.types\x1a\x14gogoproto/gogo.proto\x1a\x1ctendermint/crypto/keys.proto\"\xb2\x01\n" +
	"\fValidatorSet\x12;\n" +
	"\n" +
	"validators\x18\x01 \x03(\v2\x1b.tendermint.types.ValidatorR\n" +
	"validators\x127\n" +
	"\bproposer\x18\x02 \x01(\v2\x1b.tendermint.types.ValidatorR\bproposer\x12,\n" +
	"\x12total_voting_power\x18\x03 \x01(\x03R\x10totalVotingPower\"\xb2\x01\n" +
	"\tValidator\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12;\n" +
	"\apub_key\x18\x02 \x01(\v2\x1c.tendermint.crypto.PublicKeyB\x04\xc8\xde\x1f\x00R\x06pubKey\x12!\n" +
	"\fvoting_power\x18\x03 \x01(\x03R\vvotingPower\x12+\n" +
	"\x11proposer_priority\x18\x04 \x01(\x03R\x10proposerPriority\"k\n" +
	"\x0fSimpleValidator\x125\n" +
	"\apub_key\x18\x01 \x01(\v2\x1c.tendermint.crypto.PublicKeyR\x06pubKey\x12!\n" +
	"\fvoting_power\x18\x02 \x01(\x03R\vvotingPowerB\xc2\x01\n" +
	"\x14com.tendermint.typesB\x0eValidatorProtoP\x01Z9github.com/fluentum-chain/fluentum/proto/tendermint/types\xa2\x02\x03TTX\xaa\x02\x10Tendermint.Types\xca\x02\x10Tendermint\\Types\xe2\x02\x1cTendermint\\Types\\GPBMetadata\xea\x02\x11Tendermint::Typesb\x06proto3"

var (
	file_tendermint_types_validator_proto_rawDescOnce sync.Once
	file_tendermint_types_validator_proto_rawDescData []byte
)

func file_tendermint_types_validator_proto_rawDescGZIP() []byte {
	file_tendermint_types_validator_proto_rawDescOnce.Do(func() {
		file_tendermint_types_validator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_types_validator_proto_rawDesc), len(file_tendermint_types_validator_proto_rawDesc)))
	})
	return file_tendermint_types_validator_proto_rawDescData
}

var file_tendermint_types_validator_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tendermint_types_validator_proto_goTypes = []any{
	(*ValidatorSet)(nil),     // 0: tendermint.types.ValidatorSet
	(*Validator)(nil),        // 1: tendermint.types.Validator
	(*SimpleValidator)(nil),  // 2: tendermint.types.SimpleValidator
	(*crypto.PublicKey)(nil), // 3: tendermint.crypto.PublicKey
}
var file_tendermint_types_validator_proto_depIdxs = []int32{
	1, // 0: tendermint.types.ValidatorSet.validators:type_name -> tendermint.types.Validator
	1, // 1: tendermint.types.ValidatorSet.proposer:type_name -> tendermint.types.Validator
	3, // 2: tendermint.types.Validator.pub_key:type_name -> tendermint.crypto.PublicKey
	3, // 3: tendermint.types.SimpleValidator.pub_key:type_name -> tendermint.crypto.PublicKey
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tendermint_types_validator_proto_init() }
func file_tendermint_types_validator_proto_init() {
	if File_tendermint_types_validator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_types_validator_proto_rawDesc), len(file_tendermint_types_validator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_types_validator_proto_goTypes,
		DependencyIndexes: file_tendermint_types_validator_proto_depIdxs,
		MessageInfos:      file_tendermint_types_validator_proto_msgTypes,
	}.Build()
	File_tendermint_types_validator_proto = out.File
	file_tendermint_types_validator_proto_goTypes = nil
	file_tendermint_types_validator_proto_depIdxs = nil
}
