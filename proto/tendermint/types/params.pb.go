// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/types/params.proto

package types

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConsensusParams contains consensus critical parameters that determine the
// validity of blocks.
type ConsensusParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *BlockParams           `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Evidence      *EvidenceParams        `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Validator     *ValidatorParams       `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
	Version       *VersionParams         `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsensusParams) Reset() {
	*x = ConsensusParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusParams) ProtoMessage() {}

func (x *ConsensusParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusParams.ProtoReflect.Descriptor instead.
func (*ConsensusParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{0}
}

func (x *ConsensusParams) GetBlock() *BlockParams {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ConsensusParams) GetEvidence() *EvidenceParams {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *ConsensusParams) GetValidator() *ValidatorParams {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *ConsensusParams) GetVersion() *VersionParams {
	if x != nil {
		return x.Version
	}
	return nil
}

// BlockParams contains limits on the block size.
type BlockParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Max block size, in bytes.
	// Note: must be greater than 0
	MaxBytes int64 `protobuf:"varint,1,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	// Max gas per block.
	// Note: must be greater or equal to -1
	MaxGas int64 `protobuf:"varint,2,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	// Minimum time increment between consecutive blocks (in milliseconds) If the
	// block header timestamp is ahead of the system clock, decrease this value.
	//
	// Not exposed to the application.
	TimeIotaMs    int64 `protobuf:"varint,3,opt,name=time_iota_ms,json=timeIotaMs,proto3" json:"time_iota_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockParams) Reset() {
	*x = BlockParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParams) ProtoMessage() {}

func (x *BlockParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParams.ProtoReflect.Descriptor instead.
func (*BlockParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{1}
}

func (x *BlockParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *BlockParams) GetMaxGas() int64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *BlockParams) GetTimeIotaMs() int64 {
	if x != nil {
		return x.TimeIotaMs
	}
	return 0
}

// EvidenceParams determine how we handle evidence of malfeasance.
type EvidenceParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Max age of evidence, in blocks.
	//
	// The basic formula for calculating this is: MaxAgeDuration / {average block
	// time}.
	MaxAgeNumBlocks int64 `protobuf:"varint,1,opt,name=max_age_num_blocks,json=maxAgeNumBlocks,proto3" json:"max_age_num_blocks,omitempty"`
	// Max age of evidence, in time.
	//
	// It should correspond with an app's "unbonding period" or other similar
	// mechanism for handling [Nothing-At-Stake
	// attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
	MaxAgeDuration *durationpb.Duration `protobuf:"bytes,2,opt,name=max_age_duration,json=maxAgeDuration,proto3" json:"max_age_duration,omitempty"`
	// This sets the maximum size of total evidence in bytes that can be committed in a single block.
	// and should fall comfortably under the max block bytes.
	// Default is 1048576 or 1MB
	MaxBytes      int64 `protobuf:"varint,3,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvidenceParams) Reset() {
	*x = EvidenceParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvidenceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceParams) ProtoMessage() {}

func (x *EvidenceParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceParams.ProtoReflect.Descriptor instead.
func (*EvidenceParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{2}
}

func (x *EvidenceParams) GetMaxAgeNumBlocks() int64 {
	if x != nil {
		return x.MaxAgeNumBlocks
	}
	return 0
}

func (x *EvidenceParams) GetMaxAgeDuration() *durationpb.Duration {
	if x != nil {
		return x.MaxAgeDuration
	}
	return nil
}

func (x *EvidenceParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

// ValidatorParams restrict the public key types validators can use.
// NOTE: uses ABCI pubkey naming, not Amino names.
type ValidatorParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PubKeyTypes   []string               `protobuf:"bytes,1,rep,name=pub_key_types,json=pubKeyTypes,proto3" json:"pub_key_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatorParams) Reset() {
	*x = ValidatorParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorParams) ProtoMessage() {}

func (x *ValidatorParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorParams.ProtoReflect.Descriptor instead.
func (*ValidatorParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{3}
}

func (x *ValidatorParams) GetPubKeyTypes() []string {
	if x != nil {
		return x.PubKeyTypes
	}
	return nil
}

// VersionParams contains the ABCI application version.
type VersionParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppVersion    uint64                 `protobuf:"varint,1,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionParams) Reset() {
	*x = VersionParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionParams) ProtoMessage() {}

func (x *VersionParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionParams.ProtoReflect.Descriptor instead.
func (*VersionParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{4}
}

func (x *VersionParams) GetAppVersion() uint64 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

// HashedParams is a subset of ConsensusParams.
//
// It is hashed into the Header.ConsensusHash.
type HashedParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockMaxBytes int64                  `protobuf:"varint,1,opt,name=block_max_bytes,json=blockMaxBytes,proto3" json:"block_max_bytes,omitempty"`
	BlockMaxGas   int64                  `protobuf:"varint,2,opt,name=block_max_gas,json=blockMaxGas,proto3" json:"block_max_gas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashedParams) Reset() {
	*x = HashedParams{}
	mi := &file_tendermint_types_params_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashedParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashedParams) ProtoMessage() {}

func (x *HashedParams) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_types_params_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashedParams.ProtoReflect.Descriptor instead.
func (*HashedParams) Descriptor() ([]byte, []int) {
	return file_tendermint_types_params_proto_rawDescGZIP(), []int{5}
}

func (x *HashedParams) GetBlockMaxBytes() int64 {
	if x != nil {
		return x.BlockMaxBytes
	}
	return 0
}

func (x *HashedParams) GetBlockMaxGas() int64 {
	if x != nil {
		return x.BlockMaxGas
	}
	return 0
}

var File_tendermint_types_params_proto protoreflect.FileDescriptor

const file_tendermint_types_params_proto_rawDesc = "" +
	"\n" +
	"\x1dtendermint/types/params.proto\x12\x10tendermint.types\x1a\x14gogoproto/gogo.proto\x1a\x1egoogle/protobuf/duration.proto\"\x98\x02\n" +
	"\x0fConsensusParams\x129\n" +
	"\x05block\x18\x01 \x01(\v2\x1d.tendermint.types.BlockParamsB\x04\xc8\xde\x1f\x00R\x05block\x12B\n" +
	"\bevidence\x18\x02 \x01(\v2 .tendermint.types.EvidenceParamsB\x04\xc8\xde\x1f\x00R\bevidence\x12E\n" +
	"\tvalidator\x18\x03 \x01(\v2!.tendermint.types.ValidatorParamsB\x04\xc8\xde\x1f\x00R\tvalidator\x12?\n" +
	"\aversion\x18\x04 \x01(\v2\x1f.tendermint.types.VersionParamsB\x04\xc8\xde\x1f\x00R\aversion\"e\n" +
	"\vBlockParams\x12\x1b\n" +
	"\tmax_bytes\x18\x01 \x01(\x03R\bmaxBytes\x12\x17\n" +
	"\amax_gas\x18\x02 \x01(\x03R\x06maxGas\x12 \n" +
	"\ftime_iota_ms\x18\x03 \x01(\x03R\n" +
	"timeIotaMs\"\xa9\x01\n" +
	"\x0eEvidenceParams\x12+\n" +
	"\x12max_age_num_blocks\x18\x01 \x01(\x03R\x0fmaxAgeNumBlocks\x12M\n" +
	"\x10max_age_duration\x18\x02 \x01(\v2\x19.google.protobuf.DurationB\b\xc8\xde\x1f\x00\x98\xdf\x1f\x01R\x0emaxAgeDuration\x12\x1b\n" +
	"\tmax_bytes\x18\x03 \x01(\x03R\bmaxBytes\"?\n" +
	"\x0fValidatorParams\x12\"\n" +
	"\rpub_key_types\x18\x01 \x03(\tR\vpubKeyTypes:\b\xb8\xa0\x1f\x01\xe8\xa0\x1f\x01\":\n" +
	"\rVersionParams\x12\x1f\n" +
	"\vapp_version\x18\x01 \x01(\x04R\n" +
	"appVersion:\b\xb8\xa0\x1f\x01\xe8\xa0\x1f\x01\"Z\n" +
	"\fHashedParams\x12&\n" +
	"\x0fblock_max_bytes\x18\x01 \x01(\x03R\rblockMaxBytes\x12\"\n" +
	"\rblock_max_gas\x18\x02 \x01(\x03R\vblockMaxGasB\xc3\x01\xa8\xe2\x1e\x01\n" +
	"\x14com.tendermint.typesB\vParamsProtoP\x01Z9github.com/fluentum-chain/fluentum/proto/tendermint/types\xa2\x02\x03TTX\xaa\x02\x10Tendermint.Types\xca\x02\x10Tendermint\\Types\xe2\x02\x1cTendermint\\Types\\GPBMetadata\xea\x02\x11Tendermint::Typesb\x06proto3"

var (
	file_tendermint_types_params_proto_rawDescOnce sync.Once
	file_tendermint_types_params_proto_rawDescData []byte
)

func file_tendermint_types_params_proto_rawDescGZIP() []byte {
	file_tendermint_types_params_proto_rawDescOnce.Do(func() {
		file_tendermint_types_params_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_types_params_proto_rawDesc), len(file_tendermint_types_params_proto_rawDesc)))
	})
	return file_tendermint_types_params_proto_rawDescData
}

var file_tendermint_types_params_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tendermint_types_params_proto_goTypes = []any{
	(*ConsensusParams)(nil),     // 0: tendermint.types.ConsensusParams
	(*BlockParams)(nil),         // 1: tendermint.types.BlockParams
	(*EvidenceParams)(nil),      // 2: tendermint.types.EvidenceParams
	(*ValidatorParams)(nil),     // 3: tendermint.types.ValidatorParams
	(*VersionParams)(nil),       // 4: tendermint.types.VersionParams
	(*HashedParams)(nil),        // 5: tendermint.types.HashedParams
	(*durationpb.Duration)(nil), // 6: google.protobuf.Duration
}
var file_tendermint_types_params_proto_depIdxs = []int32{
	1, // 0: tendermint.types.ConsensusParams.block:type_name -> tendermint.types.BlockParams
	2, // 1: tendermint.types.ConsensusParams.evidence:type_name -> tendermint.types.EvidenceParams
	3, // 2: tendermint.types.ConsensusParams.validator:type_name -> tendermint.types.ValidatorParams
	4, // 3: tendermint.types.ConsensusParams.version:type_name -> tendermint.types.VersionParams
	6, // 4: tendermint.types.EvidenceParams.max_age_duration:type_name -> google.protobuf.Duration
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tendermint_types_params_proto_init() }
func file_tendermint_types_params_proto_init() {
	if File_tendermint_types_params_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_types_params_proto_rawDesc), len(file_tendermint_types_params_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_types_params_proto_goTypes,
		DependencyIndexes: file_tendermint_types_params_proto_depIdxs,
		MessageInfos:      file_tendermint_types_params_proto_msgTypes,
	}.Build()
	File_tendermint_types_params_proto = out.File
	file_tendermint_types_params_proto_goTypes = nil
	file_tendermint_types_params_proto_depIdxs = nil
}
