// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/p2p/pex.proto

package p2p

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PexRequest) Reset() {
	*x = PexRequest{}
	mi := &file_tendermint_p2p_pex_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PexRequest) ProtoMessage() {}

func (x *PexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_p2p_pex_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PexRequest.ProtoReflect.Descriptor instead.
func (*PexRequest) Descriptor() ([]byte, []int) {
	return file_tendermint_p2p_pex_proto_rawDescGZIP(), []int{0}
}

type PexAddrs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addrs         []*NetAddress          `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PexAddrs) Reset() {
	*x = PexAddrs{}
	mi := &file_tendermint_p2p_pex_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PexAddrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PexAddrs) ProtoMessage() {}

func (x *PexAddrs) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_p2p_pex_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PexAddrs.ProtoReflect.Descriptor instead.
func (*PexAddrs) Descriptor() ([]byte, []int) {
	return file_tendermint_p2p_pex_proto_rawDescGZIP(), []int{1}
}

func (x *PexAddrs) GetAddrs() []*NetAddress {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*Message_PexRequest
	//	*Message_PexAddrs
	Sum           isMessage_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_tendermint_p2p_pex_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_p2p_pex_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_tendermint_p2p_pex_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetSum() isMessage_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *Message) GetPexRequest() *PexRequest {
	if x != nil {
		if x, ok := x.Sum.(*Message_PexRequest); ok {
			return x.PexRequest
		}
	}
	return nil
}

func (x *Message) GetPexAddrs() *PexAddrs {
	if x != nil {
		if x, ok := x.Sum.(*Message_PexAddrs); ok {
			return x.PexAddrs
		}
	}
	return nil
}

type isMessage_Sum interface {
	isMessage_Sum()
}

type Message_PexRequest struct {
	PexRequest *PexRequest `protobuf:"bytes,1,opt,name=pex_request,json=pexRequest,proto3,oneof"`
}

type Message_PexAddrs struct {
	PexAddrs *PexAddrs `protobuf:"bytes,2,opt,name=pex_addrs,json=pexAddrs,proto3,oneof"`
}

func (*Message_PexRequest) isMessage_Sum() {}

func (*Message_PexAddrs) isMessage_Sum() {}

var File_tendermint_p2p_pex_proto protoreflect.FileDescriptor

const file_tendermint_p2p_pex_proto_rawDesc = "" +
	"\n" +
	"\x18tendermint/p2p/pex.proto\x12\x0etendermint.p2p\x1a\x1atendermint/p2p/types.proto\x1a\x14gogoproto/gogo.proto\"\f\n" +
	"\n" +
	"PexRequest\"B\n" +
	"\bPexAddrs\x126\n" +
	"\x05addrs\x18\x01 \x03(\v2\x1a.tendermint.p2p.NetAddressB\x04\xc8\xde\x1f\x00R\x05addrs\"\x88\x01\n" +
	"\aMessage\x12=\n" +
	"\vpex_request\x18\x01 \x01(\v2\x1a.tendermint.p2p.PexRequestH\x00R\n" +
	"pexRequest\x127\n" +
	"\tpex_addrs\x18\x02 \x01(\v2\x18.tendermint.p2p.PexAddrsH\x00R\bpexAddrsB\x05\n" +
	"\x03sumB\xb0\x01\n" +
	"\x12com.tendermint.p2pB\bPexProtoP\x01Z7github.com/fluentum-chain/fluentum/proto/tendermint/p2p\xa2\x02\x03TPX\xaa\x02\x0eTendermint.P2p\xca\x02\x0eTendermint\\P2p\xe2\x02\x1aTendermint\\P2p\\GPBMetadata\xea\x02\x0fTendermint::P2pb\x06proto3"

var (
	file_tendermint_p2p_pex_proto_rawDescOnce sync.Once
	file_tendermint_p2p_pex_proto_rawDescData []byte
)

func file_tendermint_p2p_pex_proto_rawDescGZIP() []byte {
	file_tendermint_p2p_pex_proto_rawDescOnce.Do(func() {
		file_tendermint_p2p_pex_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_p2p_pex_proto_rawDesc), len(file_tendermint_p2p_pex_proto_rawDesc)))
	})
	return file_tendermint_p2p_pex_proto_rawDescData
}

var file_tendermint_p2p_pex_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tendermint_p2p_pex_proto_goTypes = []any{
	(*PexRequest)(nil), // 0: tendermint.p2p.PexRequest
	(*PexAddrs)(nil),   // 1: tendermint.p2p.PexAddrs
	(*Message)(nil),    // 2: tendermint.p2p.Message
	(*NetAddress)(nil), // 3: tendermint.p2p.NetAddress
}
var file_tendermint_p2p_pex_proto_depIdxs = []int32{
	3, // 0: tendermint.p2p.PexAddrs.addrs:type_name -> tendermint.p2p.NetAddress
	0, // 1: tendermint.p2p.Message.pex_request:type_name -> tendermint.p2p.PexRequest
	1, // 2: tendermint.p2p.Message.pex_addrs:type_name -> tendermint.p2p.PexAddrs
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tendermint_p2p_pex_proto_init() }
func file_tendermint_p2p_pex_proto_init() {
	if File_tendermint_p2p_pex_proto != nil {
		return
	}
	file_tendermint_p2p_types_proto_init()
	file_tendermint_p2p_pex_proto_msgTypes[2].OneofWrappers = []any{
		(*Message_PexRequest)(nil),
		(*Message_PexAddrs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_p2p_pex_proto_rawDesc), len(file_tendermint_p2p_pex_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_p2p_pex_proto_goTypes,
		DependencyIndexes: file_tendermint_p2p_pex_proto_depIdxs,
		MessageInfos:      file_tendermint_p2p_pex_proto_msgTypes,
	}.Build()
	File_tendermint_p2p_pex_proto = out.File
	file_tendermint_p2p_pex_proto_goTypes = nil
	file_tendermint_p2p_pex_proto_depIdxs = nil
}
