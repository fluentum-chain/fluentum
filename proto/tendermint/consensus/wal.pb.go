// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tendermint/consensus/wal.proto

package consensus

import (
	_ "github.com/fluentum-chain/fluentum/proto/gogoproto"
	types "github.com/fluentum-chain/fluentum/proto/tendermint/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgInfo are msgs from the reactor which may update the state
type MsgInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *Message               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	PeerId        string                 `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgInfo) Reset() {
	*x = MsgInfo{}
	mi := &file_tendermint_consensus_wal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInfo) ProtoMessage() {}

func (x *MsgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_consensus_wal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInfo.ProtoReflect.Descriptor instead.
func (*MsgInfo) Descriptor() ([]byte, []int) {
	return file_tendermint_consensus_wal_proto_rawDescGZIP(), []int{0}
}

func (x *MsgInfo) GetMsg() *Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *MsgInfo) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

// TimeoutInfo internally generated messages which may update the state
type TimeoutInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Duration      *durationpb.Duration   `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Height        int64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round         int32                  `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Step          uint32                 `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeoutInfo) Reset() {
	*x = TimeoutInfo{}
	mi := &file_tendermint_consensus_wal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutInfo) ProtoMessage() {}

func (x *TimeoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_consensus_wal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutInfo.ProtoReflect.Descriptor instead.
func (*TimeoutInfo) Descriptor() ([]byte, []int) {
	return file_tendermint_consensus_wal_proto_rawDescGZIP(), []int{1}
}

func (x *TimeoutInfo) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *TimeoutInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TimeoutInfo) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *TimeoutInfo) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

// EndHeight marks the end of the given height inside WAL.
// @internal used by scripts/wal2json util.
type EndHeight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        int64                  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndHeight) Reset() {
	*x = EndHeight{}
	mi := &file_tendermint_consensus_wal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndHeight) ProtoMessage() {}

func (x *EndHeight) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_consensus_wal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndHeight.ProtoReflect.Descriptor instead.
func (*EndHeight) Descriptor() ([]byte, []int) {
	return file_tendermint_consensus_wal_proto_rawDescGZIP(), []int{2}
}

func (x *EndHeight) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type WALMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*WALMessage_EventDataRoundState
	//	*WALMessage_MsgInfo
	//	*WALMessage_TimeoutInfo
	//	*WALMessage_EndHeight
	Sum           isWALMessage_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WALMessage) Reset() {
	*x = WALMessage{}
	mi := &file_tendermint_consensus_wal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALMessage) ProtoMessage() {}

func (x *WALMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_consensus_wal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALMessage.ProtoReflect.Descriptor instead.
func (*WALMessage) Descriptor() ([]byte, []int) {
	return file_tendermint_consensus_wal_proto_rawDescGZIP(), []int{3}
}

func (x *WALMessage) GetSum() isWALMessage_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *WALMessage) GetEventDataRoundState() *types.EventDataRoundState {
	if x != nil {
		if x, ok := x.Sum.(*WALMessage_EventDataRoundState); ok {
			return x.EventDataRoundState
		}
	}
	return nil
}

func (x *WALMessage) GetMsgInfo() *MsgInfo {
	if x != nil {
		if x, ok := x.Sum.(*WALMessage_MsgInfo); ok {
			return x.MsgInfo
		}
	}
	return nil
}

func (x *WALMessage) GetTimeoutInfo() *TimeoutInfo {
	if x != nil {
		if x, ok := x.Sum.(*WALMessage_TimeoutInfo); ok {
			return x.TimeoutInfo
		}
	}
	return nil
}

func (x *WALMessage) GetEndHeight() *EndHeight {
	if x != nil {
		if x, ok := x.Sum.(*WALMessage_EndHeight); ok {
			return x.EndHeight
		}
	}
	return nil
}

type isWALMessage_Sum interface {
	isWALMessage_Sum()
}

type WALMessage_EventDataRoundState struct {
	EventDataRoundState *types.EventDataRoundState `protobuf:"bytes,1,opt,name=event_data_round_state,json=eventDataRoundState,proto3,oneof"`
}

type WALMessage_MsgInfo struct {
	MsgInfo *MsgInfo `protobuf:"bytes,2,opt,name=msg_info,json=msgInfo,proto3,oneof"`
}

type WALMessage_TimeoutInfo struct {
	TimeoutInfo *TimeoutInfo `protobuf:"bytes,3,opt,name=timeout_info,json=timeoutInfo,proto3,oneof"`
}

type WALMessage_EndHeight struct {
	EndHeight *EndHeight `protobuf:"bytes,4,opt,name=end_height,json=endHeight,proto3,oneof"`
}

func (*WALMessage_EventDataRoundState) isWALMessage_Sum() {}

func (*WALMessage_MsgInfo) isWALMessage_Sum() {}

func (*WALMessage_TimeoutInfo) isWALMessage_Sum() {}

func (*WALMessage_EndHeight) isWALMessage_Sum() {}

// TimedWALMessage wraps WALMessage and adds Time for debugging purposes.
type TimedWALMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Msg           *WALMessage            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimedWALMessage) Reset() {
	*x = TimedWALMessage{}
	mi := &file_tendermint_consensus_wal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimedWALMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimedWALMessage) ProtoMessage() {}

func (x *TimedWALMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tendermint_consensus_wal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimedWALMessage.ProtoReflect.Descriptor instead.
func (*TimedWALMessage) Descriptor() ([]byte, []int) {
	return file_tendermint_consensus_wal_proto_rawDescGZIP(), []int{4}
}

func (x *TimedWALMessage) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TimedWALMessage) GetMsg() *WALMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

var File_tendermint_consensus_wal_proto protoreflect.FileDescriptor

const file_tendermint_consensus_wal_proto_rawDesc = "" +
	"\n" +
	"\x1etendermint/consensus/wal.proto\x12\x14tendermint.consensus\x1a\x14gogoproto/gogo.proto\x1a tendermint/consensus/types.proto\x1a\x1dtendermint/types/events.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"e\n" +
	"\aMsgInfo\x125\n" +
	"\x03msg\x18\x01 \x01(\v2\x1d.tendermint.consensus.MessageB\x04\xc8\xde\x1f\x00R\x03msg\x12#\n" +
	"\apeer_id\x18\x02 \x01(\tB\n" +
	"\xe2\xde\x1f\x06PeerIDR\x06peerId\"\x90\x01\n" +
	"\vTimeoutInfo\x12?\n" +
	"\bduration\x18\x01 \x01(\v2\x19.google.protobuf.DurationB\b\xc8\xde\x1f\x00\x98\xdf\x1f\x01R\bduration\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x03R\x06height\x12\x14\n" +
	"\x05round\x18\x03 \x01(\x05R\x05round\x12\x12\n" +
	"\x04step\x18\x04 \x01(\rR\x04step\"#\n" +
	"\tEndHeight\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x03R\x06height\"\xb7\x02\n" +
	"\n" +
	"WALMessage\x12\\\n" +
	"\x16event_data_round_state\x18\x01 \x01(\v2%.tendermint.types.EventDataRoundStateH\x00R\x13eventDataRoundState\x12:\n" +
	"\bmsg_info\x18\x02 \x01(\v2\x1d.tendermint.consensus.MsgInfoH\x00R\amsgInfo\x12F\n" +
	"\ftimeout_info\x18\x03 \x01(\v2!.tendermint.consensus.TimeoutInfoH\x00R\vtimeoutInfo\x12@\n" +
	"\n" +
	"end_height\x18\x04 \x01(\v2\x1f.tendermint.consensus.EndHeightH\x00R\tendHeightB\x05\n" +
	"\x03sum\"\x7f\n" +
	"\x0fTimedWALMessage\x128\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\x04time\x122\n" +
	"\x03msg\x18\x02 \x01(\v2 .tendermint.consensus.WALMessageR\x03msgB\xd4\x01\n" +
	"\x18com.tendermint.consensusB\bWalProtoP\x01Z=github.com/fluentum-chain/fluentum/proto/tendermint/consensus\xa2\x02\x03TCX\xaa\x02\x14Tendermint.Consensus\xca\x02\x14Tendermint\\Consensus\xe2\x02 Tendermint\\Consensus\\GPBMetadata\xea\x02\x15Tendermint::Consensusb\x06proto3"

var (
	file_tendermint_consensus_wal_proto_rawDescOnce sync.Once
	file_tendermint_consensus_wal_proto_rawDescData []byte
)

func file_tendermint_consensus_wal_proto_rawDescGZIP() []byte {
	file_tendermint_consensus_wal_proto_rawDescOnce.Do(func() {
		file_tendermint_consensus_wal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tendermint_consensus_wal_proto_rawDesc), len(file_tendermint_consensus_wal_proto_rawDesc)))
	})
	return file_tendermint_consensus_wal_proto_rawDescData
}

var file_tendermint_consensus_wal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tendermint_consensus_wal_proto_goTypes = []any{
	(*MsgInfo)(nil),                   // 0: tendermint.consensus.MsgInfo
	(*TimeoutInfo)(nil),               // 1: tendermint.consensus.TimeoutInfo
	(*EndHeight)(nil),                 // 2: tendermint.consensus.EndHeight
	(*WALMessage)(nil),                // 3: tendermint.consensus.WALMessage
	(*TimedWALMessage)(nil),           // 4: tendermint.consensus.TimedWALMessage
	(*Message)(nil),                   // 5: tendermint.consensus.Message
	(*durationpb.Duration)(nil),       // 6: google.protobuf.Duration
	(*types.EventDataRoundState)(nil), // 7: tendermint.types.EventDataRoundState
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
}
var file_tendermint_consensus_wal_proto_depIdxs = []int32{
	5, // 0: tendermint.consensus.MsgInfo.msg:type_name -> tendermint.consensus.Message
	6, // 1: tendermint.consensus.TimeoutInfo.duration:type_name -> google.protobuf.Duration
	7, // 2: tendermint.consensus.WALMessage.event_data_round_state:type_name -> tendermint.types.EventDataRoundState
	0, // 3: tendermint.consensus.WALMessage.msg_info:type_name -> tendermint.consensus.MsgInfo
	1, // 4: tendermint.consensus.WALMessage.timeout_info:type_name -> tendermint.consensus.TimeoutInfo
	2, // 5: tendermint.consensus.WALMessage.end_height:type_name -> tendermint.consensus.EndHeight
	8, // 6: tendermint.consensus.TimedWALMessage.time:type_name -> google.protobuf.Timestamp
	3, // 7: tendermint.consensus.TimedWALMessage.msg:type_name -> tendermint.consensus.WALMessage
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_tendermint_consensus_wal_proto_init() }
func file_tendermint_consensus_wal_proto_init() {
	if File_tendermint_consensus_wal_proto != nil {
		return
	}
	file_tendermint_consensus_types_proto_init()
	file_tendermint_consensus_wal_proto_msgTypes[3].OneofWrappers = []any{
		(*WALMessage_EventDataRoundState)(nil),
		(*WALMessage_MsgInfo)(nil),
		(*WALMessage_TimeoutInfo)(nil),
		(*WALMessage_EndHeight)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tendermint_consensus_wal_proto_rawDesc), len(file_tendermint_consensus_wal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tendermint_consensus_wal_proto_goTypes,
		DependencyIndexes: file_tendermint_consensus_wal_proto_depIdxs,
		MessageInfos:      file_tendermint_consensus_wal_proto_msgTypes,
	}.Build()
	File_tendermint_consensus_wal_proto = out.File
	file_tendermint_consensus_wal_proto_goTypes = nil
	file_tendermint_consensus_wal_proto_depIdxs = nil
}
